@model VentasApp.ViewModels.PedidoViewModel


@{
    ViewBag.Title = "NewPedido";
}

<h2>Nuevo Pedido</h2>


@ViewBag.errorCliente

@ViewBag.Mensaje

@using (Html.BeginForm("NewPedido", "Ventas", FormMethod.Post))
{
    @Html.AntiForgeryToken()
    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.Cliente.Id, "Cliente", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("clientesSelect", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Cliente.Id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Sucursales.Id, "Sucursal", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("sucursalSelect", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Sucursales.Id, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Empleado.Id, "Empleado", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("empleadoSelect", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Empleado.Id, "", new { @class = "text-danger" })
            </div>
        </div>
        <br />
        <br />
        @Html.ActionLink("Agregar Productos", "AddProduct", new { }, new { @class = "btn btn-primary" })
        <input type="submit" value="Guardar Orden" id="NewPedido" class="btn btn-success" />

    </div>
}

<h2>Detalle Producto</h2>

<table class="table">
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.ProductTitulos.Nombre)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProductTitulos.Stock)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ProductTitulos.Precio)
        </th>
        <th></th>
    </tr>

    @for (int i = 0; i < Model.Productos.Count; i++)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => Model.Productos[i].Nombre)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.Productos[i].Stock)
            </td>
            <td>
                @Html.DisplayFor(modelItem => Model.Productos[i].Precio)
            </td>
            <td>
                boton
                @*@Html.ActionLink("Edit", "Edit", new { id = Model.Productos[i].Id }) |
                    @Html.ActionLink("Delete", "Delete", new { id = Model.Productos[i].Id })*@
            </td>
        </tr>
    }

</table>


